{"mappings":"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","sources":["<anon>","src/js/catalog.js","src/js/container.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\nparcelRequire(\"7hKzD\");\nparcelRequire(\"i8Q71\");\nparcelRequire(\"9XI3k\");\nparcelRequire(\"gVa74\");\nparcelRequire(\"5xtVg\");\n\nvar $dIxxU = parcelRequire(\"dIxxU\");\nconst $bc2e17c72ef9c01c$var$keyAuthorization = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ZTBiMjA0M2E3YmRlZmRmMTI5ZGViYjc4NGJiZTFmNyIsInN1YiI6IjY0ZDA5ZWY5ODUwOTBmMDBjODdkY2FjYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AoWYcFyuoQyP_ePohi3LRcw4Fp8RAJIbZs-uo4526oA\";\nconst $bc2e17c72ef9c01c$var$BASE_URL = \"https://api.themoviedb.org/3/\";\nconst $bc2e17c72ef9c01c$var$searchButton = document.querySelector(\".external-button\");\nconst $bc2e17c72ef9c01c$var$searchInput = document.getElementById(\"searchInput\");\nconst $bc2e17c72ef9c01c$var$trendingContainer = document.getElementById(\"trendingContainer\");\nconst $bc2e17c72ef9c01c$var$paginationNumBtn = document.querySelector(\".pagination-num-btn\");\nconst $bc2e17c72ef9c01c$var$prevPageBtn = document.getElementById(\"prevPage\");\nconst $bc2e17c72ef9c01c$var$nextPageBtn = document.getElementById(\"nextPage\");\nconst $bc2e17c72ef9c01c$var$clearButton = document.getElementById(\"clearButton\");\nlet $bc2e17c72ef9c01c$var$currentPage = 1;\nlet $bc2e17c72ef9c01c$var$totalPages = 1;\n$bc2e17c72ef9c01c$var$prevPageBtn.addEventListener(\"click\", ()=>$bc2e17c72ef9c01c$var$onPageClick($bc2e17c72ef9c01c$var$currentPage - 1));\n$bc2e17c72ef9c01c$var$nextPageBtn.addEventListener(\"click\", ()=>$bc2e17c72ef9c01c$var$onPageClick($bc2e17c72ef9c01c$var$currentPage + 1));\ndocument.getElementById(\"sortByYear\").addEventListener(\"change\", $bc2e17c72ef9c01c$var$handleSort);\ndocument.getElementById(\"sortByGenre\").addEventListener(\"change\", $bc2e17c72ef9c01c$var$handleSort);\n$bc2e17c72ef9c01c$var$searchButton.addEventListener(\"click\", $bc2e17c72ef9c01c$var$handleSearch);\n$bc2e17c72ef9c01c$var$searchInput.addEventListener(\"keydown\", (event)=>{\n    if (event.key === \"Enter\") {\n        event.preventDefault();\n        $bc2e17c72ef9c01c$var$handleSearch(event);\n    }\n});\nasync function $bc2e17c72ef9c01c$var$createMarkup(array) {\n    const markupArray = await Promise.all(array.map(async ({ id: id, genre_ids: genre_ids, poster_path: poster_path, release_date: release_date, title: title, vote_average: vote_average })=>{\n        const genreName = await $bc2e17c72ef9c01c$var$cardGenres(genre_ids);\n        const year = $bc2e17c72ef9c01c$var$getYear(release_date);\n        return `<li class=\"trends__item trends-box\" id=${id}>\n        <img\n          src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n          alt=\"${title}\"\n          class=\"trends__photo\"\n          loading=\"lazy\"\n        />\n        <div class=\"trends__description\">\n          <div class=\"trends__info\">\n            <h3 class=\"trends__name\">${title}</h3>\n            <p class=\"trends__ganre\">${genreName}|${year}</p>\n          </div>\n          <div class=\"raiting__body\">\n            <div class=\"rating__active\" style=\"width: ${vote_average * 10}px\">\n              <div class=\"rating__active__wrapper\">\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>`;\n    }));\n    return markupArray.join(\"\");\n}\nasync function $bc2e17c72ef9c01c$var$loadGenre() {\n    const response = await (0, $dIxxU.default).get(`${$bc2e17c72ef9c01c$var$BASE_URL}genre/movie/list`, {\n        headers: {\n            accept: \"application/json\",\n            Authorization: $bc2e17c72ef9c01c$var$keyAuthorization\n        },\n        params: {\n            language: \"en\"\n        }\n    });\n    const data = response.data;\n    const genres = data.genres;\n    return genres;\n}\nasync function $bc2e17c72ef9c01c$var$cardGenres(genres) {\n    const defaultGen = \"Nice film\";\n    if (genres.length === 0) return defaultGen;\n    try {\n        const genresApi = await $bc2e17c72ef9c01c$var$loadGenre();\n        const newArr = genresApi.filter((elem)=>elem.id === genres[0]).map((el)=>el.name).join(\" \");\n        return newArr;\n    } catch (error) {\n        console.log(error.code);\n    }\n}\nfunction $bc2e17c72ef9c01c$var$getYear(date) {\n    date = date.split(\"-\");\n    return date[0];\n}\nasync function $bc2e17c72ef9c01c$var$populateTrendingMovies(page) {\n    try {\n        const response = await (0, $dIxxU.default).get(`${$bc2e17c72ef9c01c$var$BASE_URL}trending/movie/day`, {\n            headers: {\n                accept: \"application/json\",\n                Authorization: $bc2e17c72ef9c01c$var$keyAuthorization\n            },\n            params: {\n                language: \"en\",\n                page: page\n            }\n        });\n        const movies = response.data.results;\n        const markup = await $bc2e17c72ef9c01c$var$createMarkup(movies);\n        const trendingContainer = document.getElementById(\"trendingContainer\");\n        trendingContainer.innerHTML = markup;\n        $bc2e17c72ef9c01c$var$totalPages = response.data.total_pages; // Update total pages\n        $bc2e17c72ef9c01c$var$updatePaginationButtons($bc2e17c72ef9c01c$var$currentPage, $bc2e17c72ef9c01c$var$totalPages);\n    } catch (error) {\n        console.log(error);\n    }\n}\nasync function $bc2e17c72ef9c01c$var$handleSearch(event) {\n    event.preventDefault();\n    const searchInput = document.getElementById(\"searchInput\");\n    const searchQuery = searchInput.value.trim();\n    if (searchQuery === \"\") return;\n    try {\n        const response = await (0, $dIxxU.default).get(`${$bc2e17c72ef9c01c$var$BASE_URL}search/movie`, {\n            headers: {\n                accept: \"application/json\",\n                Authorization: $bc2e17c72ef9c01c$var$keyAuthorization\n            },\n            params: {\n                language: \"en\",\n                query: searchQuery,\n                page: 1 // Start with page 1\n            }\n        });\n        const searchResults = response.data.results;\n        const markup = await $bc2e17c72ef9c01c$var$createMarkup(searchResults);\n        $bc2e17c72ef9c01c$var$trendingContainer.innerHTML = `<div class=\"results\">${markup}</div>`;\n        $bc2e17c72ef9c01c$var$totalPages = response.data.total_pages; // Update total pages\n        $bc2e17c72ef9c01c$var$updatePaginationButtons($bc2e17c72ef9c01c$var$currentPage, $bc2e17c72ef9c01c$var$totalPages);\n    } catch (error) {\n        console.log(error.code);\n    }\n}\n$bc2e17c72ef9c01c$var$searchInput.addEventListener(\"input\", function() {\n    if ($bc2e17c72ef9c01c$var$searchInput.value.trim() !== \"\") $bc2e17c72ef9c01c$var$clearButton.style.display = \"inline\";\n    else $bc2e17c72ef9c01c$var$clearButton.style.display = \"none\";\n});\n// Add an event listener to the clear button\n$bc2e17c72ef9c01c$var$clearButton.addEventListener(\"click\", function() {\n    $bc2e17c72ef9c01c$var$searchInput.value = \"\";\n    $bc2e17c72ef9c01c$var$clearButton.style.display = \"none\";\n});\n// Function to fetch and populate sort options for years and genres\nasync function $bc2e17c72ef9c01c$var$populateSortOptions() {\n    try {\n        const genres = await $bc2e17c72ef9c01c$var$loadGenre();\n        const sortByYear = document.getElementById(\"sortByYear\");\n        const sortByGenre = document.getElementById(\"sortByGenre\");\n        // Populate sort by year options\n        const currentYear = new Date().getFullYear();\n        // Add default option for year\n        const defaultYearOption = document.createElement(\"option\");\n        defaultYearOption.value = \"\";\n        defaultYearOption.textContent = \"Year\";\n        sortByYear.appendChild(defaultYearOption);\n        for(let year = currentYear; year >= 1900; year--){\n            const option = document.createElement(\"option\");\n            option.value = year;\n            option.textContent = year;\n            sortByYear.appendChild(option);\n        }\n        // Populate sort by genre options\n        const defaultGenreOption = document.createElement(\"option\");\n        defaultGenreOption.value = \"\";\n        defaultGenreOption.textContent = \"All\";\n        sortByGenre.appendChild(defaultGenreOption);\n        for (const genre of genres){\n            const option = document.createElement(\"option\");\n            option.value = genre.id;\n            option.textContent = genre.name;\n            sortByGenre.appendChild(option);\n        }\n    } catch (error) {\n        console.log(error.code);\n    }\n}\n// Function to handle sorting by year and genre\nasync function $bc2e17c72ef9c01c$var$handleSort(page) {\n    const sortByYear = document.getElementById(\"sortByYear\");\n    const sortByGenre = document.getElementById(\"sortByGenre\");\n    const selectedYear = sortByYear.value;\n    const selectedGenre = sortByGenre.value;\n    try {\n        const response = await (0, $dIxxU.default).get(`${$bc2e17c72ef9c01c$var$BASE_URL}discover/movie`, {\n            headers: {\n                accept: \"application/json\",\n                Authorization: $bc2e17c72ef9c01c$var$keyAuthorization\n            },\n            params: {\n                language: \"en\",\n                sort_by: \"popularity.desc\",\n                with_genres: selectedGenre,\n                primary_release_year: selectedYear,\n                page: page // Use the passed page argument\n            }\n        });\n        const sortedResults = response.data.results;\n        const markup = await $bc2e17c72ef9c01c$var$createMarkup(sortedResults);\n        $bc2e17c72ef9c01c$var$trendingContainer.innerHTML = markup;\n        $bc2e17c72ef9c01c$var$totalPages = response.data.total_pages; // Update total pages\n        $bc2e17c72ef9c01c$var$updatePaginationButtons($bc2e17c72ef9c01c$var$currentPage, $bc2e17c72ef9c01c$var$totalPages);\n    } catch (error) {\n        console.log(error.code);\n    }\n}\n// Initialize the page\nasync function $bc2e17c72ef9c01c$var$initializePage() {\n    await $bc2e17c72ef9c01c$var$populateSortOptions();\n    $bc2e17c72ef9c01c$var$onPageClick($bc2e17c72ef9c01c$var$currentPage); // Call onPageClick to load trending movies based on default behavior\n}\n$bc2e17c72ef9c01c$var$initializePage(); // Call this function to initialize the page\n// Call this function to initialize the page\nfunction $bc2e17c72ef9c01c$var$onPageClick(pageNumber) {\n    if (pageNumber < 1 || pageNumber > $bc2e17c72ef9c01c$var$totalPages) return;\n    $bc2e17c72ef9c01c$var$currentPage = pageNumber;\n    const sortByYear = document.getElementById(\"sortByYear\");\n    const sortByGenre = document.getElementById(\"sortByGenre\");\n    if ((sortByYear.value || sortByGenre.value) && sortByYear.value !== \"\" && sortByGenre.value !== \"\") $bc2e17c72ef9c01c$var$handleSort($bc2e17c72ef9c01c$var$currentPage); // Pass the currentPage to handleSort\n    else if ($bc2e17c72ef9c01c$var$searchInput.value.trim() !== \"\") $bc2e17c72ef9c01c$var$handleSearch(); // If searching is active, call handleSearch\n    else $bc2e17c72ef9c01c$var$populateTrendingMovies($bc2e17c72ef9c01c$var$currentPage); // Load trending movies if neither sorting nor searching\n    window.scrollTo({\n        top: $bc2e17c72ef9c01c$var$trendingContainer.offsetTop,\n        behavior: \"smooth\"\n    });\n}\nfunction $bc2e17c72ef9c01c$var$updatePaginationButtons(currentPage, totalPages) {\n    $bc2e17c72ef9c01c$var$paginationNumBtn.innerHTML = \"\"; // Clear existing buttons\n    // Back arrow\n    if (currentPage > 1) $bc2e17c72ef9c01c$var$addPageButton($bc2e17c72ef9c01c$var$paginationNumBtn, currentPage - 1, \"back\");\n    // Current page\n    $bc2e17c72ef9c01c$var$addPageButton($bc2e17c72ef9c01c$var$paginationNumBtn, currentPage, \"current\");\n    // Next page after current page\n    if (currentPage < totalPages) $bc2e17c72ef9c01c$var$addPageButton($bc2e17c72ef9c01c$var$paginationNumBtn, currentPage + 1, \"next\");\n    // After next page\n    if (currentPage < totalPages - 1) $bc2e17c72ef9c01c$var$addPageButton($bc2e17c72ef9c01c$var$paginationNumBtn, currentPage + 2);\n    // Three dots\n    if (currentPage < totalPages - 2) {\n        const morePagesBtn = document.createElement(\"button\");\n        morePagesBtn.classList.add(\"pagination-btn\");\n        morePagesBtn.textContent = \"...\";\n        $bc2e17c72ef9c01c$var$paginationNumBtn.appendChild(morePagesBtn);\n    }\n    // 24 page\n    $bc2e17c72ef9c01c$var$addPageButton($bc2e17c72ef9c01c$var$paginationNumBtn, currentPage + 23);\n}\nfunction $bc2e17c72ef9c01c$var$addPageButton(parentElement, pageNum, btnType = \"\") {\n    const pageBtn = document.createElement(\"button\");\n    pageBtn.classList.add(\"pagination-cycle-btn\");\n    pageBtn.textContent = pageNum < 10 ? `0${pageNum}` : `${pageNum}`;\n    if (btnType === \"current\") pageBtn.classList.add(\"current-page-btn\");\n    pageBtn.addEventListener(\"click\", ()=>$bc2e17c72ef9c01c$var$onPageClick(pageNum));\n    parentElement.appendChild(pageBtn);\n}\n\n\n\n})();\n//# sourceMappingURL=catalog.94be0fd8.js.map\n","import './footer';\nimport './header';\nimport './error';\nimport './hero';\nimport './modal';\nimport './container';","import axios from \"axios\";\n\nconst keyAuthorization = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1ZTBiMjA0M2E3YmRlZmRmMTI5ZGViYjc4NGJiZTFmNyIsInN1YiI6IjY0ZDA5ZWY5ODUwOTBmMDBjODdkY2FjYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AoWYcFyuoQyP_ePohi3LRcw4Fp8RAJIbZs-uo4526oA\"\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst searchButton = document.querySelector('.external-button');\nconst searchInput = document.getElementById('searchInput');\nconst trendingContainer = document.getElementById('trendingContainer');\nconst paginationNumBtn = document.querySelector('.pagination-num-btn');\nconst prevPageBtn = document.getElementById('prevPage');\nconst nextPageBtn = document.getElementById('nextPage');\nconst clearButton = document.getElementById('clearButton');\nlet currentPage = 1;\nlet totalPages = 1;\n\nprevPageBtn.addEventListener('click', () => onPageClick(currentPage - 1));\nnextPageBtn.addEventListener('click', () => onPageClick(currentPage + 1));\ndocument.getElementById('sortByYear').addEventListener('change', handleSort);\ndocument.getElementById('sortByGenre').addEventListener('change', handleSort);\n\nsearchButton.addEventListener('click', handleSearch);\nsearchInput.addEventListener('keydown', (event) => {\n    if (event.key === 'Enter') {\n        event.preventDefault();\n        handleSearch(event);\n    }\n});\n\nasync function createMarkup(array) {\n  const markupArray = await Promise.all(array.map(async ({\n    id,\n    genre_ids,\n    poster_path,\n    release_date,\n    title,\n    vote_average,\n  }) => {\n    \n    const genreName = await cardGenres(genre_ids);\n    const year = getYear(release_date);\n\n    return `<li class=\"trends__item trends-box\" id=${id}>\n        <img\n          src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n          alt=\"${title}\"\n          class=\"trends__photo\"\n          loading=\"lazy\"\n        />\n        <div class=\"trends__description\">\n          <div class=\"trends__info\">\n            <h3 class=\"trends__name\">${title}</h3>\n            <p class=\"trends__ganre\">${genreName}|${year}</p>\n          </div>\n          <div class=\"raiting__body\">\n            <div class=\"rating__active\" style=\"width: ${(vote_average)*10}px\">\n              <div class=\"rating__active__wrapper\">\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n                <span class=\"rating__active__color\">★</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>`;\n  }));\n\n  return markupArray.join('');\n}\n\nasync function loadGenre() {\n\n  const response = await axios.get(`${BASE_URL}genre/movie/list`,{\n    headers: {\n      accept: 'application/json',\n          Authorization: keyAuthorization\n    },\n    params: {\n      language: 'en'\n    }\n  })\n  \n  const data = response.data;\n  const genres = data.genres\n  return genres;\n}\nasync function cardGenres(genres) {\n  const defaultGen = \"Nice film\"\n  if(genres.length === 0){\n    return defaultGen;\n  }\n  try {\n    const genresApi =  await loadGenre()\n    const newArr = genresApi.filter((elem=> elem.id === genres[0])).map(el=>el.name).join(\" \")\n    \n    return newArr;\n  } catch (error) {\n    console.log(error.code);\n  }\n  \n}\nfunction getYear(date) {\n  date = date.split(\"-\");\n  return date[0];\n}\n\nasync function populateTrendingMovies(page) {\n    \n    try {\n        const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n            headers: {\n                accept: 'application/json',\n          Authorization: keyAuthorization\n            },\n            params: {\n                language: 'en',\n                page: page\n            }\n        });\n\n        const movies = response.data.results;\n        const markup = await createMarkup(movies);\n\n        const trendingContainer = document.getElementById('trendingContainer');\n        trendingContainer.innerHTML = markup;\n\n        totalPages = response.data.total_pages; // Update total pages\n        updatePaginationButtons(currentPage, totalPages);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nasync function handleSearch(event) {\n    event.preventDefault();\n\n    const searchInput = document.getElementById('searchInput');\n    const searchQuery = searchInput.value.trim();\n\n    if (searchQuery === '') {\n        return;\n    }\n\n    try {\n        const response = await axios.get(`${BASE_URL}search/movie`, {\n            headers: {\n                accept: 'application/json',\n          Authorization: keyAuthorization\n            },\n            params: {\n                language: 'en',\n                query: searchQuery,\n                page: 1 // Start with page 1\n            }\n        });\n\n        const searchResults = response.data.results;\n        const markup = await createMarkup(searchResults);\n\n        trendingContainer.innerHTML = `<div class=\"results\">${markup}</div>`;\n\n        totalPages = response.data.total_pages; // Update total pages\n        updatePaginationButtons(currentPage, totalPages);\n    } catch (error) {\n        console.log(error.code);\n    }\n}\n\n  searchInput.addEventListener('input', function() {\n            if (searchInput.value.trim() !== '') {\n                clearButton.style.display = 'inline';\n            } else {\n                clearButton.style.display = 'none';\n            }\n        });\n\n        // Add an event listener to the clear button\n        clearButton.addEventListener('click', function() {\n            searchInput.value = '';\n            clearButton.style.display = 'none';\n        });\n// Function to fetch and populate sort options for years and genres\nasync function populateSortOptions() {\n    try {\n        const genres = await loadGenre();\n        const sortByYear = document.getElementById('sortByYear');\n        const sortByGenre = document.getElementById('sortByGenre');\n\n        // Populate sort by year options\n        const currentYear = new Date().getFullYear();\n\n        // Add default option for year\n        const defaultYearOption = document.createElement('option');\n        defaultYearOption.value = '';\n        defaultYearOption.textContent = 'Year';\n        sortByYear.appendChild(defaultYearOption);\n\n        for (let year = currentYear; year >= 1900; year--) {\n            const option = document.createElement('option');\n            option.value = year;\n            option.textContent = year;\n            sortByYear.appendChild(option);\n        }\n\n        // Populate sort by genre options\n        const defaultGenreOption = document.createElement('option');\n        defaultGenreOption.value = '';\n        defaultGenreOption.textContent = 'All';\n        sortByGenre.appendChild(defaultGenreOption);\n\n        for (const genre of genres) {\n            const option = document.createElement('option');\n            option.value = genre.id;\n            option.textContent = genre.name;\n            sortByGenre.appendChild(option);\n        }\n    } catch (error) {\n        console.log(error.code);\n    }\n}\n// Function to handle sorting by year and genre\nasync function handleSort(page) { // Accept page as an argument\n    const sortByYear = document.getElementById('sortByYear');\n    const sortByGenre = document.getElementById('sortByGenre');\n\n    const selectedYear = sortByYear.value;\n    const selectedGenre = sortByGenre.value;\n\n    try {\n        const response = await axios.get(`${BASE_URL}discover/movie`, {\n            headers: {\n                accept: 'application/json',\n                Authorization: keyAuthorization\n            },\n            params: {\n                language: 'en',\n                sort_by: 'popularity.desc',\n                with_genres: selectedGenre,\n                primary_release_year: selectedYear,\n                page: page // Use the passed page argument\n            }\n        });\n\n        const sortedResults = response.data.results;\n        const markup = await createMarkup(sortedResults);\n\n        trendingContainer.innerHTML = markup;\n\n        totalPages = response.data.total_pages; // Update total pages\n        updatePaginationButtons(currentPage, totalPages);\n    } catch (error) {\n        console.log(error.code);\n    }\n}\n\n\n\n// Initialize the page\nasync function initializePage() {\n    await populateSortOptions();\n    onPageClick(currentPage); // Call onPageClick to load trending movies based on default behavior\n}\n\ninitializePage(); // Call this function to initialize the page\n // Call this function to initialize the page\n\nfunction onPageClick(pageNumber) {\n    if (pageNumber < 1 || pageNumber > totalPages) {\n        return;\n    }\n\n    currentPage = pageNumber;\n\n    const sortByYear = document.getElementById('sortByYear');\n    const sortByGenre = document.getElementById('sortByGenre');\n\n    if ((sortByYear.value || sortByGenre.value) && sortByYear.value !== '' && sortByGenre.value !== '') {\n        handleSort(currentPage); // Pass the currentPage to handleSort\n    } else if (searchInput.value.trim() !== '') {\n        handleSearch(); // If searching is active, call handleSearch\n    } else {\n        populateTrendingMovies(currentPage); // Load trending movies if neither sorting nor searching\n    }\n\n    window.scrollTo({ top: trendingContainer.offsetTop, behavior: 'smooth' });\n}\n\n\nfunction updatePaginationButtons(currentPage, totalPages) {\n    paginationNumBtn.innerHTML = ''; // Clear existing buttons\n\n    // Back arrow\n    if (currentPage > 1) {\n        addPageButton(paginationNumBtn, currentPage - 1, 'back');\n    }\n    \n    // Current page\n    addPageButton(paginationNumBtn, currentPage, 'current');\n    \n    // Next page after current page\n    if (currentPage < totalPages) {\n        addPageButton(paginationNumBtn, currentPage + 1, 'next');\n    }\n    \n    // After next page\n    if (currentPage < totalPages - 1) {\n        addPageButton(paginationNumBtn, currentPage + 2);\n    }\n    \n    // Three dots\n    if (currentPage < totalPages - 2) {\n        const morePagesBtn = document.createElement('button');\n        morePagesBtn.classList.add('pagination-btn');\n        morePagesBtn.textContent = '...';\n        paginationNumBtn.appendChild(morePagesBtn);\n    }\n    \n    // 24 page\n    addPageButton(paginationNumBtn, currentPage + 23);\n}\n\nfunction addPageButton(parentElement, pageNum, btnType = '') {\n    const pageBtn = document.createElement('button');\n    pageBtn.classList.add('pagination-cycle-btn');\n    pageBtn.textContent = pageNum < 10 ? `0${pageNum}` : `${pageNum}`;\n    \n    if (btnType === 'current') {\n        pageBtn.classList.add('current-page-btn');\n    }\n\n    pageBtn.addEventListener('click', () => onPageClick(pageNum));\n    parentElement.appendChild(pageBtn);\n}\n\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dIxxU","$bc2e17c72ef9c01c$var$keyAuthorization","$bc2e17c72ef9c01c$var$BASE_URL","$bc2e17c72ef9c01c$var$searchButton","document","querySelector","$bc2e17c72ef9c01c$var$searchInput","getElementById","$bc2e17c72ef9c01c$var$trendingContainer","$bc2e17c72ef9c01c$var$paginationNumBtn","$bc2e17c72ef9c01c$var$prevPageBtn","$bc2e17c72ef9c01c$var$nextPageBtn","$bc2e17c72ef9c01c$var$clearButton","$bc2e17c72ef9c01c$var$currentPage","$bc2e17c72ef9c01c$var$totalPages","$bc2e17c72ef9c01c$var$createMarkup","array","markupArray","Promise","all","map","genre_ids","poster_path","release_date","title","vote_average","date","genreName","$bc2e17c72ef9c01c$var$cardGenres","year","split","join","$bc2e17c72ef9c01c$var$loadGenre","response","default","get","headers","accept","Authorization","params","language","data","genres","length","genresApi","newArr","filter","elem","el","name","error","console","log","$bc2e17c72ef9c01c$var$populateTrendingMovies","page","movies","results","markup","trendingContainer","innerHTML","total_pages","$bc2e17c72ef9c01c$var$updatePaginationButtons","$bc2e17c72ef9c01c$var$handleSearch","event","preventDefault","searchInput","searchQuery","value","trim","query","searchResults","$bc2e17c72ef9c01c$var$populateSortOptions","sortByYear","sortByGenre","currentYear","Date","getFullYear","defaultYearOption","createElement","textContent","appendChild","option","defaultGenreOption","genre","$bc2e17c72ef9c01c$var$handleSort","selectedYear","selectedGenre","sort_by","with_genres","primary_release_year","sortedResults","$bc2e17c72ef9c01c$var$onPageClick","pageNumber","scrollTo","top","offsetTop","behavior","currentPage","totalPages","$bc2e17c72ef9c01c$var$addPageButton","morePagesBtn","classList","add","parentElement","pageNum","btnType","pageBtn","addEventListener","key","style","display","$bc2e17c72ef9c01c$var$initializePage"],"version":3,"file":"catalog.94be0fd8.js.map"}